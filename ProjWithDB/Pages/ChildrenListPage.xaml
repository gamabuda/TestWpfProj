<Page x:Class="ProjWithDB.Pages.ChildrenListPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ProjWithDB.Pages"
      mc:Ignorable="d" 
      d:DesignHeight="800" d:DesignWidth="1700"
      Title="ChildrenListPage" 
      Background ="snow">

    <Page.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#B227B0FF"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#E527B0FF"/>
        <SolidColorBrush x:Key="Button.Pressed.Border"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonWithoutBackgroundChange" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>

    <Grid Background="Lavender" Height="700" VerticalAlignment="Top" >
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Left">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <WrapPanel Grid.Column="0" Margin="6" HorizontalAlignment="Left">
                <Button x:Name="AddBtn" Style="{StaticResource ButtonWithoutBackgroundChange}" Content="+" BorderBrush="{x:Null}" Padding="0,-15.1,0,0" FontSize="36" Cursor="Hand" Width="28" Height="27.4" Click="AddBtn_Click" Background="{x:Null}" FontWeight="Bold" Foreground="#FF001BFF" />
            </WrapPanel>
            <WrapPanel Grid.Column="1" Margin="65,6,6,6" HorizontalAlignment="Left" >
                <Label Content="Поиск:" />
                <TextBox x:Name="SearchTB" Width="240" TextChanged="SearchTB_TextChanged"></TextBox>
            </WrapPanel>

            <WrapPanel Grid.Column="3" Margin="6,8,6,6" HorizontalAlignment="Left">
                <ComboBox Width="144" x:Name="SurnameFilter" DropDownClosed="SurnameFilter_DropDownClosed"/>
            </WrapPanel>
            <WrapPanel Grid.Column="4" Margin="0,8,6,6" HorizontalAlignment="Left">
                <ComboBox Width="144" x:Name="NameFilter" DropDownClosed="NameFilter_DropDownClosed"></ComboBox>
            </WrapPanel>
            <WrapPanel Grid.Column="5" Margin="0,8,6,6" HorizontalAlignment="Left">
                <ComboBox Width="144" x:Name="PatronymicFilter" DropDownClosed="PatronymicFilter_DropDownClosed"></ComboBox>
            </WrapPanel>
            <WrapPanel Grid.Column="6" Margin="0,8,6,6" HorizontalAlignment="Left">
                <ComboBox Width="144" x:Name="GenderFilter" DropDownClosed="GenderFilter_DropDownClosed"></ComboBox>
            </WrapPanel>
            <WrapPanel Grid.Column="7" Margin="0,8,6,6" HorizontalAlignment="Left">
                <ComboBox Width="144" x:Name="AgeFilter" DropDownClosed="AgeFilter_DropDownClosed"></ComboBox>
            </WrapPanel>
            <WrapPanel Grid.Column="8" Margin="0,8,6,6" HorizontalAlignment="Left">
                <ComboBox Width="144" x:Name="RoomNumberFilter" DropDownClosed="RoomNumberFilter_DropDownClosed"></ComboBox>
            </WrapPanel>
            <WrapPanel Grid.Column="9" Margin="0,8,10,6" HorizontalAlignment="Left">
                <ComboBox Width="144" x:Name="MoveInDateFilter" DropDownClosed="MoveInDateFilter_DropDownClosed"></ComboBox>
            </WrapPanel>
            
            <WrapPanel Grid.Column="10" Margin="10,6,6,6" HorizontalAlignment="Left">
                <Button x:Name="ClearBtn" Content="Снять фильтры" Background="#FFCE2828" BorderBrush="{x:Null}" Foreground="White" Click="ClearBtn_Click" Padding="20,4,20,4" Grid.IsSharedSizeScope="True" />
            </WrapPanel>

        </Grid>

        <ListView Name="LstView" Grid.Row="1" BorderBrush="{x:Null}" Background="snow">
            <ListView.View>
                <GridView>
                    <GridViewColumn DisplayMemberBinding="{Binding Path=Id}" Width="150">Идентификатор</GridViewColumn>
                    <GridViewColumn Width="250" Header="Фото" >
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Image x:Name="ObjectImg" Source="{Binding Photo}" Width="100" Height="100" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Path=Surname}" Width="150">Фамилия</GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Path=Name}" Width="150">Имя</GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Path=Patronymic}" Width="150">Отчество</GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Path=Gender}" Width="150">Пол</GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Path=Age}" Width="150">Возраст</GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Path=RoomNumber}" Width="150">Комната</GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Path=MoveInDate, StringFormat='{}{0:d}'}" Width="150">Дата заселения</GridViewColumn>
                </GridView>
            </ListView.View>
            <ListView.ContextMenu>
                <ContextMenu x:Name="ContextM" >
                    <MenuItem Header="Инфо" Click="ViewPerson_Click"/>
                    <MenuItem x:Name="Delete_MI" Header="Удалить" Click="DeletePerson_Click"/>
                </ContextMenu>
            </ListView.ContextMenu>
        </ListView>
    </Grid>
</Page>
