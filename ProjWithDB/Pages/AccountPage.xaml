<Page x:Class="ProjWithDB.Pages.AccountPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ProjWithDB.Pages"
      mc:Ignorable="d" 
      d:DesignHeight="800" d:DesignWidth="1700"
      Title="AccountPage"
      Background="White">

    <Page.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#B227B0FF"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#E527B0FF"/>
        <SolidColorBrush x:Key="Button.Pressed.Border"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonWithoutBackgroundChange" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>

    <Grid Background="White" Height="700" VerticalAlignment="Top">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="273*" />
            <ColumnDefinition Width="577*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="116*" />
            <RowDefinition Height="465*" />
            <RowDefinition Height="119*" />
        </Grid.RowDefinitions>

        <Label Content="Профиль" FontWeight="Bold" VerticalAlignment="Center" BorderBrush="{x:Null}" Grid.Column="1" HorizontalAlignment="Left" Margin="176,0,0,0" Padding="0" FontSize="56" />

        <WrapPanel Margin="50,30,0,0" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top">
            <Button x:Name="ExitBtn" Style="{StaticResource ButtonWithoutBackgroundChange}" BorderBrush="{x:Null}" Padding="0,0,0,0" FontSize="20" Cursor="Hand" Width="50" Height="50" Click="ExitBtn_Click">
                <Button.Background>
                    <ImageBrush Stretch="Uniform" ImageSource="/img/icons/exit.png"/>
                </Button.Background>
            </Button>
        </WrapPanel>

        <Border Grid.Row="1" CornerRadius="25" HorizontalAlignment="Center" Width="440" VerticalAlignment="Center" Height="440" >
            <Button x:Name="LoadImgBtn" Click="LoadImgBtn_Click" BorderBrush="#FFC9C9C9" Width="440" Height="440">
                <Image x:Name="ObjectImg" Width="440" Height="440" Source="{Binding Photo}"/>
                <Button.ContextMenu>
                    <ContextMenu x:Name="ContextM" >
                        <MenuItem x:Name="LoadPhoto_MI" Header="Загрузить" Click="LoadImgBtn_Click"/>
                        <MenuItem x:Name="DeletePhoto_MI" Header="Удалить" Click="DeletePhoto_Click"/>
                    </ContextMenu>
                </Button.ContextMenu>
            </Button>
        </Border>

        <Border Grid.Column="1" Grid.Row="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="239*" />
                    <ColumnDefinition Width="915*" />
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Margin="4,0,0,0">
                    <Label Content="Идентификатор:" FontSize="24" Height="40" Margin="0,0,0,6" />
                    <Label Content="Логин:"  FontSize="24" Height="40" Margin="0,0,0,6" />
                    <Label Content="Пароль:"  FontSize="24" Height="40" Margin="0,0,0,6" />
                    <Label Content="Роль:"  FontSize="24" Height="40" Margin="0,0,0,6" />
                </StackPanel>

                <StackPanel x:Name="Info_SP" Grid.Column="1" Margin="4,0,0,0" IsEnabled="True">
                    <TextBox x:Name="Id_TB" Text="{Binding Id, UpdateSourceTrigger=Explicit}" VerticalAlignment="Center" FontSize="24" Height="40" Padding="0,5,0,0" Margin="0,0,0,6" Background="{x:Null}" BorderBrush="{x:Null}" IsEnabled="False" />
                    <TextBox x:Name="Login_TB" Text="{Binding Login, UpdateSourceTrigger=Explicit}" VerticalAlignment="Center" FontSize="24" Height="40" Padding="0,5,0,0" Margin="0,0,0,6" Background="{x:Null}" BorderBrush="{x:Null}" />
                    <TextBox x:Name="Password_TB" Text="{Binding Password, UpdateSourceTrigger=Explicit}" VerticalAlignment="Center" FontSize="24" Height="40" Padding="0,5,0,0" Margin="0,0,0,6" BorderBrush="{x:Null}" Background="{x:Null}" />
                    <TextBox x:Name="Role_TB" Text="{Binding Role.Title, UpdateSourceTrigger=Explicit}" VerticalAlignment="Center" FontSize="24" Height="40" Padding="0,5,0,0" Margin="0,0,0,6" BorderBrush="{x:Null}" Background="{x:Null}" />
                </StackPanel>

            </Grid>
        </Border>

        <Button x:Name="SaveBtn" Grid.Column="1" Grid.Row="2" Content="Сохранить изменения"  Cursor="Hand" Click="SaveBtn_Click" FontSize="24" VerticalAlignment="Center" Height="50" Background="#FF0061FF" Foreground="White" BorderBrush="#FF0061FF" FontWeight="Bold" Width="700" HorizontalAlignment="Left" Margin="0,-20,0,0" />

    </Grid>
</Page>
